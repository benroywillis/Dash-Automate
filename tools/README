ReportGenerator.py: plots correlation of hotcode vs. PaMul kernel sizes (ie for each kernel the blocks present in that kernel are plotted, x axis is hotcode, y axis is PaMul
 - contains mechanisms to pick a file tree for all kernel files and map them to the corresponding project name

DirectoryStats.py: collects kernel stats of a specific automation run and collects them into a table. 
 - contains mappings from crude project names to refined ones
 - mechanism for retrieving all kernel files is similar to ReportGenerator.py, but the system is generalized beyond HC, 2DMarkov and Scops

PlotKernelCoverageStats.py: Reads "matched" data (data where all three tools, HC, PaMul and llvm polly scops have good results) and plots the coverage of the kernels, meaning the % of the program static basic blocks that have been covered by each respective tool

TimeDilationScript.py: mini version of Dash-Automate that collects information about timing (high precision, does not use SLURM), profile size, input graph nodes and edges, etc
 - must be run on individual projects, not the whole corpus (uses bash, can't overload one machine or else this will bias the data)
 - data can be read and plotted by PlotDilationResults.py
 - 20 jobs or less are allowed at a time

PlotDilationResults.py: plots information produced by TimeDilationScript.py runs into figures to show dilation of the profiler, transforms, file reads, segmentation tool
 - contains mechanism to read in each run file 

TransformationStats.py: contains plotting code for transformation stats (change in nodes, edges, entropy) before and after transforms

